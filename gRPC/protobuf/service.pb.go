// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: service.proto

package gRPC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CourseReply_ReplyType int32

const (
	CourseReply_OK      CourseReply_ReplyType = 0
	CourseReply_DELETED CourseReply_ReplyType = 1
	CourseReply_ERROR   CourseReply_ReplyType = 2
)

// Enum value maps for CourseReply_ReplyType.
var (
	CourseReply_ReplyType_name = map[int32]string{
		0: "OK",
		1: "DELETED",
		2: "ERROR",
	}
	CourseReply_ReplyType_value = map[string]int32{
		"OK":      0,
		"DELETED": 1,
		"ERROR":   2,
	}
)

func (x CourseReply_ReplyType) Enum() *CourseReply_ReplyType {
	p := new(CourseReply_ReplyType)
	*p = x
	return p
}

func (x CourseReply_ReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseReply_ReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (CourseReply_ReplyType) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x CourseReply_ReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseReply_ReplyType.Descriptor instead.
func (CourseReply_ReplyType) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1, 0}
}

type CourseRequest_Action int32

const (
	CourseRequest_POST   CourseRequest_Action = 0
	CourseRequest_GET    CourseRequest_Action = 1
	CourseRequest_DELETE CourseRequest_Action = 2
	CourseRequest_PUT    CourseRequest_Action = 3
)

// Enum value maps for CourseRequest_Action.
var (
	CourseRequest_Action_name = map[int32]string{
		0: "POST",
		1: "GET",
		2: "DELETE",
		3: "PUT",
	}
	CourseRequest_Action_value = map[string]int32{
		"POST":   0,
		"GET":    1,
		"DELETE": 2,
		"PUT":    3,
	}
)

func (x CourseRequest_Action) Enum() *CourseRequest_Action {
	p := new(CourseRequest_Action)
	*p = x
	return p
}

func (x CourseRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (CourseRequest_Action) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x CourseRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseRequest_Action.Descriptor instead.
func (CourseRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2, 0}
}

// Data transfer object: carries changes to a given course by id
type CourseDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExpectedWorkload int32   `protobuf:"varint,3,opt,name=expectedWorkload,proto3" json:"expectedWorkload,omitempty"`
	Rating           float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *CourseDTO) Reset() {
	*x = CourseDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseDTO) ProtoMessage() {}

func (x *CourseDTO) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseDTO.ProtoReflect.Descriptor instead.
func (*CourseDTO) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *CourseDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseDTO) GetExpectedWorkload() int32 {
	if x != nil {
		return x.ExpectedWorkload
	}
	return 0
}

func (x *CourseDTO) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

// Message that is always sent back to the client
type CourseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyType        CourseReply_ReplyType `protobuf:"varint,1,opt,name=replyType,proto3,enum=DisysExercisegRPC.CourseReply_ReplyType" json:"replyType,omitempty"`
	Id               int32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ExpectedWorkload int32                 `protobuf:"varint,4,opt,name=expectedWorkload,proto3" json:"expectedWorkload,omitempty"`
	Rating           float32               `protobuf:"fixed32,5,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *CourseReply) Reset() {
	*x = CourseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseReply) ProtoMessage() {}

func (x *CourseReply) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseReply.ProtoReflect.Descriptor instead.
func (*CourseReply) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *CourseReply) GetReplyType() CourseReply_ReplyType {
	if x != nil {
		return x.ReplyType
	}
	return CourseReply_OK
}

func (x *CourseReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseReply) GetExpectedWorkload() int32 {
	if x != nil {
		return x.ExpectedWorkload
	}
	return 0
}

func (x *CourseReply) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

// Message format that is always sent to the server
type CourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action         CourseRequest_Action `protobuf:"varint,1,opt,name=action,proto3,enum=DisysExercisegRPC.CourseRequest_Action" json:"action,omitempty"`
	CourseId       *int32               `protobuf:"varint,2,opt,name=courseId,proto3,oneof" json:"courseId,omitempty"`
	NewCourseState *CourseDTO           `protobuf:"bytes,3,opt,name=newCourseState,proto3,oneof" json:"newCourseState,omitempty"`
}

func (x *CourseRequest) Reset() {
	*x = CourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseRequest) ProtoMessage() {}

func (x *CourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseRequest.ProtoReflect.Descriptor instead.
func (*CourseRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *CourseRequest) GetAction() CourseRequest_Action {
	if x != nil {
		return x.Action
	}
	return CourseRequest_POST
}

func (x *CourseRequest) GetCourseId() int32 {
	if x != nil && x.CourseId != nil {
		return *x.CourseId
	}
	return 0
}

func (x *CourseRequest) GetNewCourseState() *CourseDTO {
	if x != nil {
		return x.NewCourseState
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52,
	0x50, 0x43, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x73, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x22, 0x8e, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50,
	0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x48, 0x01, 0x52, 0x0e, 0x6e,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x22, 0x30, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f,
	0x53, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54,
	0x10, 0x03, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x32, 0xd1, 0x02, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x12, 0x45, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e,
	0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50,
	0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x44,
	0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50, 0x43,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x67, 0x52,
	0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x20, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x12, 0x20, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x44, 0x69, 0x73, 0x79, 0x73, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x4d, 0x42, 0x2d, 0x46, 0x2f, 0x44, 0x69, 0x73, 0x79, 0x73,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x31, 0x2f, 0x67, 0x52, 0x50, 0x43, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_proto_goTypes = []interface{}{
	(CourseReply_ReplyType)(0), // 0: DisysExercisegRPC.CourseReply.ReplyType
	(CourseRequest_Action)(0),  // 1: DisysExercisegRPC.CourseRequest.Action
	(*CourseDTO)(nil),          // 2: DisysExercisegRPC.CourseDTO
	(*CourseReply)(nil),        // 3: DisysExercisegRPC.CourseReply
	(*CourseRequest)(nil),      // 4: DisysExercisegRPC.CourseRequest
	(*emptypb.Empty)(nil),      // 5: google.protobuf.Empty
}
var file_service_proto_depIdxs = []int32{
	0, // 0: DisysExercisegRPC.CourseReply.replyType:type_name -> DisysExercisegRPC.CourseReply.ReplyType
	1, // 1: DisysExercisegRPC.CourseRequest.action:type_name -> DisysExercisegRPC.CourseRequest.Action
	2, // 2: DisysExercisegRPC.CourseRequest.newCourseState:type_name -> DisysExercisegRPC.CourseDTO
	5, // 3: DisysExercisegRPC.DisysExercisegRPC.NewCourse:input_type -> google.protobuf.Empty
	4, // 4: DisysExercisegRPC.DisysExercisegRPC.GetCourse:input_type -> DisysExercisegRPC.CourseRequest
	4, // 5: DisysExercisegRPC.DisysExercisegRPC.DeleteCourse:input_type -> DisysExercisegRPC.CourseRequest
	4, // 6: DisysExercisegRPC.DisysExercisegRPC.EditCourse:input_type -> DisysExercisegRPC.CourseRequest
	3, // 7: DisysExercisegRPC.DisysExercisegRPC.NewCourse:output_type -> DisysExercisegRPC.CourseReply
	3, // 8: DisysExercisegRPC.DisysExercisegRPC.GetCourse:output_type -> DisysExercisegRPC.CourseReply
	3, // 9: DisysExercisegRPC.DisysExercisegRPC.DeleteCourse:output_type -> DisysExercisegRPC.CourseReply
	3, // 10: DisysExercisegRPC.DisysExercisegRPC.EditCourse:output_type -> DisysExercisegRPC.CourseReply
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
